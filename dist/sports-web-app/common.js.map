{"version":3,"sources":["./src/app/core/models/player.model.ts","./src/app/core/services/player-data.service.ts","./src/app/core/services/toast.service.ts","./src/app/features/event/event-data.service.ts","./src/app/shared/layout/header-breadcrumb/header-breadcrumb.component.ts","./src/app/shared/layout/header-breadcrumb/header-breadcrumb.component.html","./src/app/shared/layout/header-breadcrumb/header-breadcrumb.module.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["export class Player {\n    constructor() {\n        this.playerId = null;\n        this.playerName = null;\n        this.password = null;\n        this.emailId = null;\n        this.birthDate = null;\n    }\n\n    playerId: number;\n    playerName: string;\n    password: string;\n    emailId: string;\n    birthDate: Date;\n}","import { Injectable } from '@angular/core';\nimport { Player } from 'src/app/core/models/player.model';\n\n@Injectable({\n    providedIn: 'root',\n})\n/**\n * Player service class\n */\nexport class PlayerDataService {\n\n    players: Player[] = [];\n\n    constructor() {\n        let player = {\n            playerId: 1, playerName: \"admin\", password: \"password\", emailId: \"admin@admin.com\", birthDate: new Date('10/28/1992')\n        };\n        this.players.push(player);\n    }\n\n    /**\n     * get player by player name and password\n     * @param playerName \n     * @param password \n     */\n    getPlayerByPlayerNameAndPassword(playerName: string, password: string): Player {\n        let player: Player = null;\n        this.players.forEach(element => {\n            if (element.playerName === playerName && element.password === password) {\n                player = element;\n            }\n        });\n        return player;\n    }\n\n    /**\n     * Add a player\n     * @param playerName \n     * @param password \n     * @param emailId \n     * @param birthDate \n     */\n    addPlayer(playerName: string, password: string, emailId: string, birthDate: Date): boolean {\n        let playerId = this.players.length + 1;\n        let player = new Player();\n        player.playerId = playerId;\n        player.playerName = playerName;\n        player.password = password;\n        player.emailId = emailId;\n        player.birthDate = birthDate;\n        this.players.push(player);\n        return true;\n    }\n}","import { Injectable } from '@angular/core';\nimport { MessageService } from 'primeng/api';\n\n@Injectable({\n    providedIn: 'root',\n})\n/**\n * Toast service class\n * This class provides methods to add single, multiple alerts as a toast \n */\nexport class ToastService {\n    constructor(private messageService: MessageService) { }\n\n    /**\n     * add single toast message\n     * @param severity Severity level of the message, valid values are \"success\", \"info\", \"warn\" and \"error\"\n     * @param summary Summary text of the message.\n     * @param detail Detail text of the message.\n     */\n    addSingle(severity: string, summary: string, detail: string) {\n        this.messageService.add({ severity: severity, summary: summary, detail: detail });\n    }\n\n    /**\n     * add multiple toast messages\n     * @param messages \n     * array of message type {severity:'success', summary:'Service Message', detail:'Via MessageService'}\n     */\n    addMultiple(messages: any) {\n        this.messageService.addAll(messages);\n    }\n\n    /**\n     * clear all toast messages\n     */\n    clear() {\n        this.messageService.clear();\n    }\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventDataService {\n\n    events: any[];\n\n    constructor() {\n        this.events = [\n            { EventId: 1001, EventName: \"Panama Vs Mexico\"},\n            { EventId: 1002, EventName: \"Costa Rica Vs Jamaica\"},\n            { EventId: 2001, EventName: \"Brooklyn Nets Vs Milwaukee Bucks\"},\n            { EventId: 2002, EventName: \"Golden State Warriors Vs Los Angeles Lakers\"},\n            { EventId: 3001, EventName: \"Dallas Cowboys Vs Tampa Bay Buccaneers\"},\n            { EventId: 3002, EventName: \"Baltimore Ravens Vs Las Vegas Raiders\"},\n            { EventId: 4001, EventName: \"Los Angeles Dodgers Vs St. Louis Cardinals\"},\n            { EventId: 4002, EventName: \"Los Angeles Angels Vs San Diego Padres\"},\n            { EventId: 5001, EventName: \"Gustavo Lopez Vs Heili Alateng\"},\n            { EventId: 5002, EventName: \"Erin Blanchfield Vs Sarah Alpar\"}];\n    }\n\n    getAllEvents() {\n        return this.events;\n    }\n\n    getEventById(id: number) {\n        var data;\n        this.events.forEach(element => {\n            if (element.EventId === id) {\n                data = element;\n            }\n        });\n        return data;\n    }\n\n    getEventByName(name: string) {        \n        var data;\n        this.events.forEach(element => {\n            if (element.EventName === name) {\n                data = element;\n            }\n        });\n        return data;\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\nimport { RouteStateService } from 'src/app/core/services/route-state.service';\n\n@Component({\n  selector: 'app-header-breadcrumb',\n  templateUrl: 'header-breadcrumb.component.html',\n  styleUrls: ['header-breadcrumb.component.css']\n})\n\n/**\n * Header breadcrumb component class\n *\n * @author Francisco Franco\n * @version %I%, %G%\n * @since 1.0\n */\nexport class HeaderBreadcrumbComponent implements OnInit {\n\n  items: MenuItem[];\n\n  home: MenuItem;\n\n\n  constructor(private routeStateService: RouteStateService) {\n    this.items = [];\n  }\n\n  ngOnInit() {\n    var routes = this.routeStateService.getAll();\n    routes.forEach(route => {\n      this.items.push({ label: route.title, command: () => { this.onClickBreadcrumb(route.id); } });\n    });\n\n    this.home = { icon: 'pi' };\n  }\n\n  onClickBreadcrumb(id: number) {\n    this.routeStateService.loadById(id);\n  }\n}\n","<p-breadcrumb [model]=\"items\" styleClass=\"header-breadcrumb\" [home]=\"home\"></p-breadcrumb>","import { NgModule } from '@angular/core';\nimport { HeaderBreadcrumbComponent } from 'src/app/shared/layout/header-breadcrumb/header-breadcrumb.component';\nimport { AppCommonModule } from 'src/app/app.common.module';\n\n@NgModule({\n  imports: [\n    AppCommonModule\n  ],\n  declarations: [\n    HeaderBreadcrumbComponent,\n  ],\n  exports: [\n    HeaderBreadcrumbComponent\n  ]\n})\nexport class HeaderBreadCrumbModule { }"],"sourceRoot":"webpack:///"}